
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 6,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [0,4,2] [128,2,65] 
Target:'65',   Steps:7,    Buffer: 5,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [0,8,4] [128,4,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [0,16,8] [128,8,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [32,16,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [64,16,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [72,44,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [16,72,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [16,100,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [0,64,32] [0,32,16] [128,16,72] [128,72,100] [128,100,114] [16,114,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [0,48,24] [128,24,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [48,40,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [32,40,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [32,48,40] [128,40,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [48,88,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [64,88,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [64,32,48] [128,48,88] [128,88,108] [88,108,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [32,40,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [56,68,62] [68,62,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [80,68,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [80,56,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [56,44,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [32,56,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [64,56,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [32,80,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [80,72,76] [32,76,54] [76,54,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [32,72,52] [64,52,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [64,72,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [64,80,72] [128,72,100] [32,100,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 4,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [80,104,92] [104,92,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [32,68,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [32,104,68] [128,68,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [0,64,32] [128,32,80] [128,80,104] [128,104,116] [80,116,98] [32,98,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [48,24,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [24,44,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [0,48,24] [64,24,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [0,72,36] [128,36,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [48,72,60] [72,60,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [96,72,84] [48,84,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [48,68,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [96,48,72] [128,72,100] [64,100,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [48,56,52] [96,52,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [64,48,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 4    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [96,68,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [48,88,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [0,96,48] [128,48,88] [64,88,76] [88,76,82] [48,82,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [0,40,20] [80,20,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [40,60,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [80,40,60] [80,60,70] [60,70,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [96,40,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [64,40,52] [128,52,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [0,80,40] [128,40,84] [96,84,90] [40,90,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [0,88,44] [128,44,86] [44,86,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [96,80,88] [80,88,84] [0,84,42] [88,42,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [80,36,58] [72,58,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [96,36,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [0,72,36] [64,36,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [0,68,34] [96,34,65] 
Target:'65',   Steps:7,    Buffer: 1,   Solution: 2    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [64,72,68] [64,68,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [64,80,72] [128,72,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [0,104,52] [80,52,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [64,96,80] [128,80,104] [96,104,100] [0,100,50] [80,50,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [112,56,84] [64,84,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [96,56,76] [56,76,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [0,112,56] [128,56,92] [56,92,74] [56,74,65] 
Target:'65',   Steps:7,    Buffer: 3,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [0,52,26] [104,26,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [96,112,104] [0,104,52] [104,52,78] [52,78,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 3    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [88,44,66] [64,66,65] 
Target:'65',   Steps:7,    Buffer: 2,   Solution: 4    Method: [0,128,64] [128,64,96] [128,96,112] [64,112,88] [0,88,44] [128,44,86] [44,86,65] 